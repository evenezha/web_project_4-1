!function(){"use strict";var e=class{constructor(e,t){this._form=t,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputList=[...this._form.querySelectorAll(this._inputSelector)],this._buttonElement=this._form.querySelector(this._submitButtonSelector)}_showInputError(e,t){const s=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}enableValidation(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}};function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class s{constructor(e){this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._closePopupOnRemoteClick=this._closePopupOnRemoteClick.bind(this)}open(){this._popup.classList.add("popup_open"),this._popup.addEventListener("mousedown",this._closePopupOnRemoteClick),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose),this._popup.removeEventListener("mousedown",this._closePopupOnRemoteClick)}_closePopupOnRemoteClick(e){e.target.classList.contains("popup__overlay")&&this.close()}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popup.querySelector(".popup__close-btn").addEventListener("click",(()=>this.close()))}}var o=class extends s{constructor(e,t){let{handleFormSubmit:s}=t;super(e),this._form=this._popup.querySelector(".popup__form"),this._handleFormSubmit=s,this._inputList=this._form.querySelectorAll(".popup__form-input"),this._saveButton=this._form.querySelector(".popup__button"),this._saveButtonText=this._saveButton.value}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}_getInputValues(){return this._objData={},this._inputList.forEach((e=>{this._objData[e.name]=e.value})),this._objData}setInputValues(e){this._objInput={},this._inputList.forEach((t=>{console.log(e),this._objInput[t.name]=e[t.value]}))}renderSaving(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._loadingButtonText;this._submitButton.textContent=e?t:this._submitButtonText}close(){super.close(),this._form.reset()}open(){super.open(),this._saveButton.value=this._saveButtonText}};class n{constructor(e){let{nameSelector:t,careerSelector:s}=e;this._name=document.querySelector(t),this._career=document.querySelector(s)}getUserInfo(){return{name:this._name.textContent,occupation:this._career.textContent}}setUserInfo(e){this._name.textContent=e.name,this._career.textContent=e.occupation}setUserAvatar(e){let{avatar:t}=e;this._profilePic.src=t}}const r=document.querySelector(".account__edit-button"),i=(document.querySelector(".account__name"),document.querySelector(".account__description"),document.querySelector(".popup__edit-close"),document.querySelector(".popup__account-name")),a=document.querySelector(".popup__account-description"),c=document.querySelector(".popup__edit-form"),l=document.querySelector(".account__add-button"),u=(document.querySelector(".popup__place-close-btn"),document.querySelector(".popup__place-name"),document.querySelector(".popup__place-link"),document.querySelector(".popup__place-form")),_=document.querySelector(".cards__list"),p={formSelector:".popup__form",inputSelector:".popup__form-input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input-type-error",errorClass:"popup__error_visible"},h=new class{constructor(e){let{baseUrl:t,authToken:s,name:o,about:n}=e;this._baseUrl=t,this._authToken=s,this._name=o,this._about=n}async getCardList(){try{const e=await fetch("".concat(this._baseUrl,"/cards"),{headers:{authorization:"099989f7-9742-46ef-99f8-aa8e6872a6c3"}}),t=await e.json();console.log(t)}catch(e){console.log(e)}}async getUserInfo(){try{const e=await fetch("".concat(this._baseUrl,"/users/me"),{headers:{authorization:"099989f7-9742-46ef-99f8-aa8e6872a6c3"}}),t=await e.json();console.log(t)}catch(e){console.log(e)}}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",authToken:"099989f7-9742-46ef-99f8-aa8e6872a6c3"}),d=new n({nameSelector:".account__name",careerSelector:".account__description"});h.getUserInfo().then((e=>{n.setUserInfo({name:e.name,occupation:e.about})}));const m=e=>new class{constructor(e,s,o){t(this,"_handleLikeButton",(e=>{e.target.classList.toggle("card__place-favorite_active")})),t(this,"_handleDeleteButton",(()=>{this._cardElement.remove(),this._cardElement=null})),this.handleCardClick=o,this._name=e.name,this._link=e.link,this._cardSelector=s}_setEventListeners(){this._cardElement.querySelector(".card__place-favorite").addEventListener("click",this._handleLikeButton),this._cardElement.querySelector(".card__trash").addEventListener("click",(()=>{this._handleDeleteButton(this._cardElement)})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this.handleCardClick({link:this._link,name:this._name})}))}_getTemplate(){return document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}getView(){this._cardElement=this._getTemplate(),this._cardElement.querySelector(".card__place-name").textContent=this._name;const e=this._cardElement.querySelector(".card__image");return e.src=this._link,e.alt=this._name,this._setEventListeners(),this._cardElement}}(e,"#card-template",(()=>{E(e)}),(()=>{document.querySelector(".cards__list").childNodes.length?document.querySelector(".cards__no-places").classList.remove("cards__no-places_active"):document.querySelector(".cards__no-places").classList.add("cards__no-places_active")})).getView(),v=new class{constructor(e,t){let{items:s,renderer:o}=e;this._renderedItems=s,this._renderer=o,this._container=t}addItem(e){this._container.prepend(e)}renderItems(){this._renderedItems.forEach((e=>{this._renderer(e)}))}}({renderer:e=>{const t=m(e);v.addItem(t)}},_),S=new class extends s{constructor(e){super(e),this._cardImage=document.querySelector(".popup__image-preview")}open(e,t){const s=this._cardImage;s.src=t,s.alt=e,document.querySelector(".popup__preview-name").textContent=e,super.open()}}("#view__image"),E=e=>{S.open(e.name,e.link)},f=new o("#add__place",{handleFormSubmit:e=>{v.addItem(m(e)),f.close()}});l.addEventListener("click",(()=>{f.open(),L.resetValidation()}));const b=new o("#account__edit",{handleFormSubmit:e=>{d.setUserInfo(e),b.close()}});r.addEventListener("click",(()=>{const{name:e,occupation:t}=d.getUserInfo();i.value=e,a.value=t,b.open(),y.resetValidation()}));const y=new e(p,c),L=new e(p,u);h.getCardList().then((e=>{v.renderItems(e)})),L.enableValidation(),y.enableValidation(),b.setEventListeners(),S.setEventListeners(),f.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,