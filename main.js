!function(){"use strict";var e=class{constructor(e,t){this._form=t,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputList=[...this._form.querySelectorAll(this._inputSelector)],this._buttonElement=this._form.querySelector(this._submitButtonSelector)}_showInputError(e,t){const s=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}enableValidation(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}};function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class s{constructor(e){this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._closePopupOnRemoteClick=this._closePopupOnRemoteClick.bind(this)}open(){this._popup.classList.add("popup_open"),this._popup.addEventListener("mousedown",this._closePopupOnRemoteClick),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose),this._popup.removeEventListener("mousedown",this._closePopupOnRemoteClick)}_closePopupOnRemoteClick(e){e.target.classList.contains("popup__overlay")&&this.close()}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popup.querySelector(".popup__close-btn").addEventListener("click",(()=>this.close()))}}var o=class extends s{constructor(e,t){let{handleFormSubmit:s}=t;super(e),this._form=this._popup.querySelector(".popup__form"),this._handleFormSubmit=s,this._inputList=this._form.querySelectorAll(".popup__form-input"),this._saveButton=this._form.querySelector(".popup__button"),this._saveButtonText=this._saveButton.value}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}_getInputValues(){return this._objData={},this._inputList.forEach((e=>{this._objData[e.name]=e.value})),this._objData}setInputValues(e){this._objInput={},this._inputList.forEach((t=>{console.log(e),this._objInput[t.name]=e[t.value]}))}renderSaving(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._loadingButtonText;this._submitButton.textContent=e?t:this._submitButtonText}close(){super.close(),this._form.reset()}open(){super.open(),this._saveButton.value=this._saveButtonText}};class n{constructor(e){let{nameSelector:t,careerSelector:s}=e;this._name=document.querySelector(t),this._career=document.querySelector(s)}getUserInfo(){return{name:this._name.textContent,occupation:this._career.textContent}}setUserInfo(e){this._name.textContent=e.name,this._career.textContent=e.occupation}setUserAvatar(e){let{avatar:t}=e;this._profilePic.src=t}}const r=document.querySelector(".account__edit-button"),i=(document.querySelector(".account__name"),document.querySelector(".account__description"),document.querySelector(".popup__edit-close"),document.querySelector(".popup__account-name")),a=document.querySelector(".popup__account-description"),c=document.querySelector(".popup__edit-form"),l=document.querySelector(".account__add-button"),u=(document.querySelector(".popup__place-close-btn"),document.querySelector(".popup__place-name"),document.querySelector(".popup__place-link"),document.querySelector(".popup__place-form")),_=document.querySelector(".cards__list"),p={formSelector:".popup__form",inputSelector:".popup__form-input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input-type-error",errorClass:"popup__error_visible"},h=new class{constructor(e){let{baseUrl:t,authToken:s,name:o,about:n}=e;this._baseUrl=t,this._authToken=s,this._name=o,this._about=n}async getCardList(){try{const e=await fetch("".concat(this._baseUrl,"/cards"),{headers:{authorization:"099989f7-9742-46ef-99f8-aa8e6872a6c3"}}),t=await e.json();console.log(t)}catch(e){console.log(e)}}async getUserInfo(){try{const e=await fetch("".concat(this._baseUrl,"/users/me"),{headers:{authorization:"099989f7-9742-46ef-99f8-aa8e6872a6c3"}}),t=await e.json();console.log(t)}catch(e){console.log(e)}}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",authToken:"099989f7-9742-46ef-99f8-aa8e6872a6c3"}),d=new n({nameSelector:".account__name",careerSelector:".account__description"});h.getUserInfo().then((e=>{n.setUserInfo({name:e.name,occupation:e.about})}));const m=e=>new class{constructor(e,s,o){t(this,"_handleLikeButton",(e=>{e.target.classList.toggle("card__place-favorite_active")})),t(this,"_handleDeleteButton",(()=>{this._cardElement.remove(),this._cardElement=null})),this.handleCardClick=o,this._name=e.name,this._link=e.link,this._cardSelector=s}_setEventListeners(){this._cardElement.querySelector(".card__place-favorite").addEventListener("click",this._handleLikeButton),this._cardElement.querySelector(".card__trash").addEventListener("click",(()=>{this._handleDeleteButton(this._cardElement)})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this.handleCardClick({link:this._link,name:this._name})}))}_getTemplate(){return document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}getView(){this._cardElement=this._getTemplate(),this._cardElement.querySelector(".card__place-name").textContent=this._name;const e=this._cardElement.querySelector(".card__image");return e.src=this._link,e.alt=this._name,this._setEventListeners(),this._cardElement}}(e,"#card-template",(()=>{E(e)}),(()=>{document.querySelector(".cards__list").childNodes.length?document.querySelector(".cards__no-places").classList.remove("cards__no-places_active"):document.querySelector(".cards__no-places").classList.add("cards__no-places_active")})).getView(),v=new class{constructor(e,t){let{items:s,renderer:o}=e;this._renderedItems=s,this._renderer=o,this._container=t}addItem(e){this._container.prepend(e)}renderItems(e){e.forEach(this._renderer)}}({renderer:e=>{const t=m(e);v.addItem(t)}},_),S=new class extends s{constructor(e){super(e),this._cardImage=document.querySelector(".popup__image-preview")}open(e,t){const s=this._cardImage;s.src=t,s.alt=e,document.querySelector(".popup__preview-name").textContent=e,super.open()}}("#view__image"),E=e=>{S.open(e.name,e.link)},f=new o("#add__place",{handleFormSubmit:e=>{v.addItem(m(e)),f.close()}});l.addEventListener("click",(()=>{f.open(),L.resetValidation()}));const b=new o("#account__edit",{handleFormSubmit:e=>{d.setUserInfo(e),b.close()}});r.addEventListener("click",(()=>{const{name:e,occupation:t}=d.getUserInfo();i.value=e,a.value=t,b.open(),y.resetValidation()}));const y=new e(p,c),L=new e(p,u);L.enableValidation(),y.enableValidation(),b.setEventListeners(),S.setEventListeners(),f.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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TWtILEVBQXVCLElBQUlDLEVBQy9CL0osRUFDQWlHLEdBR0kyRCxFQUFzQixJQUFJRyxFQUM5Qi9KLEVBQ0FtRyxHQUlGeUQsRUFBb0JuSCxtQkFDcEJxSCxFQUFxQnJILG1CQUNyQm9ILEVBQWNsRyxvQkFDZDJGLEVBQWtCM0Ysb0JBQ2xCK0YsRUFBVy9GLG1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9hcGkuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlxyXG5jbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICBjb25zdHJ1Y3Rvcih2YWxpZGF0aW9uU2V0dGluZ3MsIGZvcm1FbGVtZW50KSB7XHJcbiAgICB0aGlzLl9mb3JtID0gZm9ybUVsZW1lbnQ7XHJcblxyXG4gICAgdGhpcy5fZm9ybVNlbGVjdG9yID0gdmFsaWRhdGlvblNldHRpbmdzLmZvcm1TZWxlY3RvcjtcclxuICAgIHRoaXMuX2lucHV0U2VsZWN0b3IgPSB2YWxpZGF0aW9uU2V0dGluZ3MuaW5wdXRTZWxlY3RvcjtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gdmFsaWRhdGlvblNldHRpbmdzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xyXG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IHZhbGlkYXRpb25TZXR0aW5ncy5pbmFjdGl2ZUJ1dHRvbkNsYXNzO1xyXG4gICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gdmFsaWRhdGlvblNldHRpbmdzLmlucHV0RXJyb3JDbGFzcztcclxuICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSB2YWxpZGF0aW9uU2V0dGluZ3MuZXJyb3JDbGFzcztcclxuICAgIHRoaXMuX2lucHV0TGlzdCA9IFsuLi50aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvcildO1xyXG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpIHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGVycm9yTWVzc2FnZTtcclxuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gIH1cclxuXHJcbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xyXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XHJcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xyXG4gIH1cclxuXHJcbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpIHtcclxuICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XHJcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfaGFzSW52YWxpZElucHV0KCkgeyBcclxuICAgIHJldHVybiB0aGlzLl9pbnB1dExpc3Quc29tZSgoaW5wdXRFbGVtZW50KSA9PiB7IFxyXG4gICAgICByZXR1cm4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZDsgXHJcbiAgICB9KTsgXHJcbiAgfSBcclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCk7XHJcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG5cclxuICBfdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XHJcbiAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KCkpIHtcclxuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmRpc2FibGVkID0gdHJ1ZTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCBmdW5jdGlvbiAoZXZ3bnQpIHtcclxuICAgICAgZXZ3bnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG5cclxuICByZXNldFZhbGlkYXRpb24oKSB7IFxyXG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTsgXHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaChpbnB1dEVsZW1lbnQgPT4geyBcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTsgXHJcbiAgICB9KTsgXHJcbiAgfSBcclxuICBcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgRm9ybVZhbGlkYXRvcjtcclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAgeyBcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7IFxyXG4gICAgdGhpcy5fcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpOyBcclxuICAgIHRoaXMuX2hhbmRsZUVzY0Nsb3NlID0gdGhpcy5faGFuZGxlRXNjQ2xvc2UuYmluZCh0aGlzKTsgXHJcbiAgICB0aGlzLl9jbG9zZVBvcHVwT25SZW1vdGVDbGljayA9IHRoaXMuX2Nsb3NlUG9wdXBPblJlbW90ZUNsaWNrLmJpbmQodGhpcyk7IFxyXG4gIH0gXHJcbiBcclxuICBvcGVuKCkgeyBcclxuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9vcGVuXCIpOyBcclxuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgdGhpcy5fY2xvc2VQb3B1cE9uUmVtb3RlQ2xpY2spOyBcclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTsgXHJcbiAgfSBcclxuIFxyXG4gIGNsb3NlKCkgeyBcclxuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoXCJwb3B1cF9vcGVuXCIpOyBcclxuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTsgXHJcbiAgICB0aGlzLl9wb3B1cC5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIHRoaXMuX2Nsb3NlUG9wdXBPblJlbW90ZUNsaWNrKTsgXHJcbiAgfSBcclxuIFxyXG4gIF9jbG9zZVBvcHVwT25SZW1vdGVDbGljayhldnQpIHsgXHJcbiAgICBpZiAoZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJwb3B1cF9fb3ZlcmxheVwiKSkgeyBcclxuICAgICAgdGhpcy5jbG9zZSgpOyBcclxuICAgIH0gXHJcbiAgfSBcclxuXHJcbiAgX2hhbmRsZUVzY0Nsb3NlKGV2dCkgeyBcclxuICAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7IFxyXG4gICAgICB0aGlzLmNsb3NlKCk7IFxyXG4gICAgfSBcclxuICB9IFxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkgeyBcclxuICAgIHRoaXMuX3BvcHVwIFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fY2xvc2UtYnRuXCIpIFxyXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHRoaXMuY2xvc2UoKSk7IFxyXG4gIH0gXHJcbn0gIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7IFxyXG5cclxuIFxyXG4gY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHsgXHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgeyBoYW5kbGVGb3JtU3VibWl0IH0pIHsgXHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTsgXHJcbiAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKTsgXHJcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDsgXHJcbiAgICB0aGlzLl9pbnB1dExpc3QgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoXCIucG9wdXBfX2Zvcm0taW5wdXRcIik7IFxyXG4gICAgdGhpcy5fc2F2ZUJ1dHRvbiA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fYnV0dG9uXCIpOyBcclxuICAgIHRoaXMuX3NhdmVCdXR0b25UZXh0ID0gdGhpcy5fc2F2ZUJ1dHRvbi52YWx1ZTtcclxuICB9XHJcbiBcclxuICBzZXRFdmVudExpc3RlbmVycygpIHsgXHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpOyBcclxuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7IFxyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTsgXHJcbiAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7IFxyXG4gICB9KTsgXHJcbiAgfSBcclxuICBcclxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7IFxyXG4gICAgdGhpcy5fb2JqRGF0YSA9IHt9OyBcclxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4geyBcclxuICAgICAgdGhpcy5fb2JqRGF0YVtpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlOyBcclxuICAgIH0pOyBcclxuICAgIHJldHVybiB0aGlzLl9vYmpEYXRhOyBcclxuICB9IFxyXG4gXHJcbiAgc2V0SW5wdXRWYWx1ZXMoZGF0YSkgeyBcclxuICAgIHRoaXMuX29iaklucHV0ID0ge307IFxyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7IFxyXG4gICAgICBjb25zb2xlLmxvZyhkYXRhKTsgXHJcbiAgICAgIHRoaXMuX29iaklucHV0W2lucHV0Lm5hbWVdID0gZGF0YVtpbnB1dC52YWx1ZV07IFxyXG4gICAgfSk7IFxyXG4gIH0gXHJcblxyXG4gIHJlbmRlclNhdmluZyhpc1NhdmluZywgbG9hZGluZ1RleHQgPSB0aGlzLl9sb2FkaW5nQnV0dG9uVGV4dCkge1xyXG4gICAgaWYgKGlzU2F2aW5nKSB7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IGxvYWRpbmdUZXh0O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gdGhpcy5fc3VibWl0QnV0dG9uVGV4dDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNsb3NlKCkgeyBcclxuICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgICB0aGlzLl9mb3JtLnJlc2V0KCk7IFxyXG4gIH0gXHJcblxyXG4gIG9wZW4oKSB7IFxyXG4gICAgc3VwZXIub3BlbigpOyBcclxuICAgIHRoaXMuX3NhdmVCdXR0b24udmFsdWUgPSB0aGlzLl9zYXZlQnV0dG9uVGV4dDsgXHJcbiAgfSBcclxufSBcclxuXHJcbiBcclxuZXhwb3J0IGRlZmF1bHQgUG9wdXBXaXRoRm9ybTsiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7IFxyXG4gIGNvbnN0cnVjdG9yKHsgbmFtZVNlbGVjdG9yLCBjYXJlZXJTZWxlY3RvciB9KSB7XHJcbiAgICB0aGlzLl9uYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuYW1lU2VsZWN0b3IpOyBcclxuICAgIHRoaXMuX2NhcmVlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY2FyZWVyU2VsZWN0b3IpOyBcclxuICB9IFxyXG5cclxuICBnZXRVc2VySW5mbygpIHsgXHJcbiAgICByZXR1cm4geyBuYW1lOiB0aGlzLl9uYW1lLnRleHRDb250ZW50LCBvY2N1cGF0aW9uOiB0aGlzLl9jYXJlZXIudGV4dENvbnRlbnQgfTsgXHJcbiAgfSBcclxuXHJcbiAgc2V0VXNlckluZm8oZGF0YSkgeyBcclxuICAgIHRoaXMuX25hbWUudGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7IFxyXG4gICAgdGhpcy5fY2FyZWVyLnRleHRDb250ZW50ID0gZGF0YS5vY2N1cGF0aW9uOyBcclxuICB9IFxyXG5cclxuICBzZXRVc2VyQXZhdGFyKHthdmF0YXJ9KXtcclxuICAgIHRoaXMuX3Byb2ZpbGVQaWMuc3JjID0gYXZhdGFyO1xyXG4gIH1cclxufVxyXG4iLCIvL0FjY291bnQgYW5kIFBsYWNlIFNlY3Rpb25zXHJcbmV4cG9ydCBjb25zdCBlZGl0QWNjb3VudE9wZW5CdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gIFwiLmFjY291bnRfX2VkaXQtYnV0dG9uXCJcclxuKTtcclxuXHJcbmV4cG9ydCBjb25zdCBhY2NvdW50TmFtZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hY2NvdW50X19uYW1lXCIpO1xyXG5leHBvcnQgY29uc3QgYWNjb3VudFRpdGxlSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmFjY291bnRfX2Rlc2NyaXB0aW9uXCIpO1xyXG5leHBvcnQgY29uc3QgYWNjb3VudE5hbWUgPSBcIi5hY2NvdW50X19uYW1lXCI7XHJcbmV4cG9ydCBjb25zdCBhY2NvdW50VGl0bGUgPSBcclxuICBcIi5hY2NvdW50X19kZXNjcmlwdGlvblwiXHJcbjtcclxuZXhwb3J0IGNvbnN0IGFjY291bnRGb3JtID0gXCIjYWNjb3VudF9fZWRpdFwiO1xyXG5leHBvcnQgY29uc3QgZWRpdEFjY291bnRDbG9zZUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2VkaXQtY2xvc2VcIik7XHJcbmV4cG9ydCBjb25zdCBwb3B1cEFjY291bnROYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fYWNjb3VudC1uYW1lXCIpO1xyXG5leHBvcnQgY29uc3QgcG9wdXBBY2NvdW50VGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gIFwiLnBvcHVwX19hY2NvdW50LWRlc2NyaXB0aW9uXCJcclxuKTtcclxuZXhwb3J0IGNvbnN0IHN1Ym1pdEFjY291bnRFZGl0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZWRpdC1mb3JtXCIpO1xyXG5cclxuLy8gUG9wdXAgU2VjdGlvbnNcclxuZXhwb3J0IGNvbnN0IHBvcHVwQWRkUGxhY2VGb3JtID0gXCIjYWRkX19wbGFjZVwiO1xyXG5leHBvcnQgY29uc3QgYWRkUGxhY2VzT3BlbkJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWNjb3VudF9fYWRkLWJ1dHRvblwiKTtcclxuZXhwb3J0IGNvbnN0IGFkZFBsYWNlQ2xvc2VCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gIFwiLnBvcHVwX19wbGFjZS1jbG9zZS1idG5cIlxyXG4pO1xyXG5leHBvcnQgY29uc3QgcG9wdXBQbGFjZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19wbGFjZS1uYW1lXCIpO1xyXG5leHBvcnQgY29uc3QgcG9wdXBQbGFjZVVybCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX3BsYWNlLWxpbmtcIik7XHJcbmV4cG9ydCBjb25zdCBzdWJtaXROZXdQbGFjZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX3BsYWNlLWZvcm1cIik7XHJcblxyXG4vLyBDYXJkcyBMaXN0XHJcbmV4cG9ydCBjb25zdCBwbGFjZUxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX19saXN0XCIpO1xyXG5cclxuLy8gUGxhY2UgQ2FyZHNcclxuZXhwb3J0IGNvbnN0IGluaXRpYWxDYXJkcyA9IFtcclxuICB7XHJcbiAgICBuYW1lOiBcIlJlYWNoaW5nIGZvciB0aGUgTW9vblwiLFxyXG4gICAgbGluazogXCJodHRwczovL2kucGluaW1nLmNvbS81NjR4Lzg4LzliLzM2Lzg4OWIzNjA3YjJiOTM0MzBiNDBkN2YwM2FlOTE4ZThkLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJQb3J0cmFpdCBvZiBCYXJiYXJhIG9mIFBvcnR1Z2FsXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vaS5waW5pbWcuY29tLzU2NHgvOGEvYTAvNzAvOGFhMDcwNTMxNzhjYjFiYmI0YTNmOTMzNzlkNzUwZDIuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIlNpbWVyZW55YVwiLFxyXG4gICAgbGluazogXCJodHRwczovL2kucGluaW1nLmNvbS81NjR4LzQ2LzY2LzMwLzQ2NjYzMDUwZTM4ODU1MGJmMjRiODA4NjE3OTYyNzFlLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJDdXBpZCBhbmQgUHN5Y2hlXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vaS5waW5pbWcuY29tLzU2NHgvMTYvZTIvOGIvMTZlMjhiYmI0ODgwODVjZjVkZjY5ZjYyYzA3NzkxY2IuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIlN0cmVldCBpbiB0aGUgRXZlbmluZywgUHJhZ3VlXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vaS5waW5pbWcuY29tLzU2NHgvZmUvODUvM2IvZmU4NTNiMTJlZTUyOTBhNGIwOTY3ZWM2ZTIwZGU3ODIuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkdpcmwgYXQgdGhlIFBpYW5vXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vaS5waW5pbWcuY29tLzU2NHgvZDcvMGIvNTMvZDcwYjUzNDc5MWY1MGY2MmU3NDE2NjlhZWNkN2E0NzkuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkdvaW5nIEhvbWVcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9pLnBpbmltZy5jb20vNTY0eC9hZC81My8yYi9hZDUzMmIzMWJiZmNkMDA2YzZiOGYzM2E5YjRjZWJmMy5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiUmFpbnkgTmlnaHRcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9pLnBpbmltZy5jb20vNTY0eC8xYS81MC8zMi8xYTUwMzIxYjkwNWI1ZGRkNjBiMjgwMmMxYjUwYWQ0Yi5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiVGhlIFNwcmVhZGluZyBUcmVlXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vaS5waW5pbWcuY29tLzU2NHgvZDYvYjIvZjkvZDZiMmY5NDY1Nzk3YzRhZGVjNWZjYTY0MWExZGQyZDguanBnXCIsXHJcbiAgfSxcclxuXTtcclxuXHJcbi8vIFZhbGlkYXRvcnNcclxuXHJcbmV4cG9ydCBjb25zdCB2YWxpZGF0aW9uU2V0dGluZ3MgPSB7XHJcbiAgZm9ybVNlbGVjdG9yOiBcIi5wb3B1cF9fZm9ybVwiLFxyXG4gIGlucHV0U2VsZWN0b3I6IFwiLnBvcHVwX19mb3JtLWlucHV0XCIsXHJcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLnBvcHVwX19idXR0b25cIixcclxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcInBvcHVwX19idXR0b25fZGlzYWJsZWRcIixcclxuICBpbnB1dEVycm9yQ2xhc3M6IFwicG9wdXBfX2lucHV0LXR5cGUtZXJyb3JcIixcclxuICBlcnJvckNsYXNzOiBcInBvcHVwX19lcnJvcl92aXNpYmxlXCIsXHJcbn07XHJcbiIsIi8vIEluZGV4IENTUyBJbXBvcnRcclxuaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcclxuXHJcbi8vIEpTIEltcG9ydHNcclxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xyXG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XHJcbmltcG9ydCBwb3B1cFdpdGhWZXJpZmljYXRpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvcG9wdXBXaXRoVmVyaWZpY2F0aW9uLmpzXCI7XHJcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcclxuaW1wb3J0IEFwaSBmcm9tIFwiLi4vY29tcG9uZW50cy9hcGkuanNcIjtcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XHJcbmltcG9ydCB7XHJcbiAgaW5pdGlhbENhcmRzLFxyXG4gIGVkaXRBY2NvdW50T3BlbkJ0bixcclxuICBhY2NvdW50TmFtZSxcclxuICBhY2NvdW50VGl0bGUsXHJcbiAgYWNjb3VudEZvcm0sXHJcbiAgcG9wdXBBY2NvdW50TmFtZSxcclxuICBhY2NvdW50TmFtZUlucHV0LFxyXG4gIGFjY291bnRUaXRsZUlucHV0LFxyXG4gIHBvcHVwQWNjb3VudFRpdGxlLFxyXG4gIHN1Ym1pdEFjY291bnRFZGl0LFxyXG4gIHBvcHVwQWRkUGxhY2VGb3JtLFxyXG4gIGFkZFBsYWNlc09wZW5CdG4sXHJcbiAgcG9wdXBQbGFjZU5hbWUsXHJcbiAgcG9wdXBQbGFjZVVybCxcclxuICBzdWJtaXROZXdQbGFjZSxcclxuICBwbGFjZUxpc3QsXHJcbiAgdmFsaWRhdGlvblNldHRpbmdzLFxyXG59IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcclxuXHJcbmNvbnN0IGFwaSA9IG5ldyBBcGkgKHtcclxuICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvZ3JvdXAtMTJcIixcclxuICBhdXRoVG9rZW46IFwiMDk5OTg5ZjctOTc0Mi00NmVmLTk5ZjgtYWE4ZTY4NzJhNmMzXCJcclxuICB9KTtcclxuXHJcbiAgXHJcblxyXG4gIGNvbnN0IG5ld1VzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHsgXHJcbiAgICBuYW1lU2VsZWN0b3I6IGFjY291bnROYW1lLCBcclxuICAgIGNhcmVlclNlbGVjdG9yOiBhY2NvdW50VGl0bGVcclxuICB9KTsgXHJcblxyXG4gIGFwaS5nZXRVc2VySW5mbygpLnRoZW4odXNlckRhdGEgPT4ge1xyXG4gICAgVXNlckluZm8uc2V0VXNlckluZm8oe1xyXG4gICAgICBuYW1lOiB1c2VyRGF0YS5uYW1lLFxyXG4gICAgICBvY2N1cGF0aW9uOiB1c2VyRGF0YS5hYm91dFxyXG4gICAgfSlcclxuICB9KTtcclxuXHJcbi8vIENhcmQgRnVuY3Rpb25zXHJcblxyXG5jb25zdCBjcmVhdGVDYXJkID0gKGNhcmREYXRhKSA9PiB7IFxyXG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZCggXHJcbiAgICBjYXJkRGF0YSwgXHJcbiAgICBcIiNjYXJkLXRlbXBsYXRlXCIsXHJcbiAgICAoKSA9PiB7IFxyXG4gICAgICBoYW5kbGVDYXJkQ2xpY2soY2FyZERhdGEpOyBcclxuICAgIH0sIFxyXG5cclxuICAgICgpID0+IHsgXHJcbiAgICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX19saXN0XCIpLmNoaWxkTm9kZXMubGVuZ3RoKSB7IFxyXG4gICAgICAgIGRvY3VtZW50IFxyXG4gICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZHNfX25vLXBsYWNlc1wiKSBcclxuICAgICAgICAgIC5jbGFzc0xpc3QucmVtb3ZlKFwiY2FyZHNfX25vLXBsYWNlc19hY3RpdmVcIik7IFxyXG4gICAgICB9IGVsc2UgeyBcclxuXHJcbiAgICAgICAgZG9jdW1lbnQgXHJcbiAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkc19fbm8tcGxhY2VzXCIpIFxyXG4gICAgICAgICAgLmNsYXNzTGlzdC5hZGQoXCJjYXJkc19fbm8tcGxhY2VzX2FjdGl2ZVwiKTsgXHJcbiAgICAgIH0gXHJcbiAgICB9IFxyXG4gICk7IFxyXG4gIHJldHVybiBjYXJkLmdldFZpZXcoKTsgXHJcbn07IFxyXG5cclxuY29uc3QgcmVuZGVyQ2FyZCA9IGNhcmREYXRhID0+IHtcclxuICBjb25zdCBjYXJkRWxlbWVudCA9IGNyZWF0ZUNhcmQoY2FyZERhdGEpO1xyXG4gIGNhcmRMaXN0LmFkZEl0ZW0oY2FyZEVsZW1lbnQpO1xyXG59O1xyXG4gXHJcbmNvbnN0IGNhcmRMaXN0ID0gbmV3IFNlY3Rpb24oXHJcbiAge1xyXG4gICAgcmVuZGVyZXI6IHJlbmRlckNhcmRcclxuICB9LFxyXG4gIHBsYWNlTGlzdFxyXG4pO1xyXG5cclxuXHJcblxyXG5jb25zdCBwcmV2aWV3SW1hZ2VQb3B1cCA9IG5ldyBQb3B1cFdpdGhJbWFnZShcIiN2aWV3X19pbWFnZVwiKTsgXHJcblxyXG4gXHJcbmNvbnN0IGhhbmRsZUNhcmRDbGljayA9IChpdGVtKSA9PiB7IFxyXG4gIHByZXZpZXdJbWFnZVBvcHVwLm9wZW4oaXRlbS5uYW1lLCBpdGVtLmxpbmspOyBcclxufTtcclxuLy9DYXJkIFN1Ym1pdCBGb3JtXHJcbmNvbnN0IGFkZE5ld0NhcmQgPSBuZXcgUG9wdXBXaXRoRm9ybShwb3B1cEFkZFBsYWNlRm9ybSwgeyBcclxuICBoYW5kbGVGb3JtU3VibWl0OiAoZGF0YSkgPT4geyBcclxuICAgIGNhcmRMaXN0LmFkZEl0ZW0oY3JlYXRlQ2FyZChkYXRhKSk7IFxyXG4gICAgYWRkTmV3Q2FyZC5jbG9zZSgpOyBcclxuICB9LCBcclxufSk7IFxyXG4gXHJcbmFkZFBsYWNlc09wZW5CdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHsgXHJcbiAgYWRkTmV3Q2FyZC5vcGVuKCk7IFxyXG4gIHBsYWNlc0Zvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7IFxyXG59KTsgXHJcbi8vRWRpdCBTdWJtaXQgRm9ybVxyXG4gXHJcblxyXG5jb25zdCBlZGl0Rm9ybVBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oYWNjb3VudEZvcm0sIHsgXHJcbiAgaGFuZGxlRm9ybVN1Ym1pdDogKGRhdGEpID0+IHsgXHJcbiAgICBuZXdVc2VySW5mby5zZXRVc2VySW5mbyhkYXRhKTsgXHJcbiAgICBlZGl0Rm9ybVBvcHVwLmNsb3NlKCk7IFxyXG4gIH0sIFxyXG59KTsgXHJcblxyXG5lZGl0QWNjb3VudE9wZW5CdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHsgXHJcbiAgY29uc3Qge25hbWUsIG9jY3VwYXRpb259ID0gbmV3VXNlckluZm8uZ2V0VXNlckluZm8oKVxyXG4gIHBvcHVwQWNjb3VudE5hbWUudmFsdWUgPSBuYW1lO1xyXG4gIHBvcHVwQWNjb3VudFRpdGxlLnZhbHVlID0gb2NjdXBhdGlvbjtcclxuICBlZGl0Rm9ybVBvcHVwLm9wZW4oKTsgXHJcbiAgYWNjb3VudEZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7IFxyXG59KTsgXHJcblxyXG5jb25zdCBhY2NvdW50Rm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKFxyXG4gIHZhbGlkYXRpb25TZXR0aW5ncyxcclxuICBzdWJtaXRBY2NvdW50RWRpdFxyXG4pO1xyXG5cclxuY29uc3QgcGxhY2VzRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKFxyXG4gIHZhbGlkYXRpb25TZXR0aW5ncyxcclxuICBzdWJtaXROZXdQbGFjZVxyXG4pO1xyXG5cclxuXHJcbnBsYWNlc0Zvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5hY2NvdW50Rm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbmVkaXRGb3JtUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTsgXHJcbnByZXZpZXdJbWFnZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7IFxyXG5hZGROZXdDYXJkLnNldEV2ZW50TGlzdGVuZXJzKCk7ICIsImNsYXNzIEFwaSB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7YmFzZVVybCwgYXV0aFRva2VuLCBuYW1lLCBhYm91dH0pIHtcclxuICAgICAgICB0aGlzLl9iYXNlVXJsID0gYmFzZVVybDtcclxuICAgICAgICB0aGlzLl9hdXRoVG9rZW4gPSBhdXRoVG9rZW47XHJcbiAgICAgICAgdGhpcy5fbmFtZSA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5fYWJvdXQgPSBhYm91dDtcclxuICAgIH1cclxuXHJcblxyXG4vLyBHRVQgaHR0cHM6Ly9hcm91bmQubm9tb3JlcGFydGllcy5jby92MS9ncm91cC0xMi9jYXJkc1xyXG5cclxuICAgIGFzeW5jIGdldENhcmRMaXN0KCkge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xyXG4gICAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICBhdXRob3JpemF0aW9uOiBcIjA5OTk4OWY3LTk3NDItNDZlZi05OWY4LWFhOGU2ODcyYTZjM1wiXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgY29uc3QgcmVzdWx0XzEgPSBhd2FpdCByZXMuanNvbigpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdF8xKTtcclxuICAgICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTsgLy8gbG9nIHRoZSBlcnJvciB0byB0aGUgY29uc29sZVxyXG4gICAgICB9XHJcbn1cclxuXHJcbi8vIEdFVCBodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxL2dyb3VwLTEyL3VzZXJzL21lXHJcbiBhc3luYyBnZXRVc2VySW5mbygpIHtcclxuICB0cnkge1xyXG4gICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICBhdXRob3JpemF0aW9uOiBcIjA5OTk4OWY3LTk3NDItNDZlZi05OWY4LWFhOGU2ODcyYTZjM1wiXHJcbiAgICAgICB9XHJcbiAgICAgfSk7XHJcbiAgICAgY29uc3QgcmVzdWx0XzEgPSBhd2FpdCByZXMuanNvbigpO1xyXG4gICAgIGNvbnNvbGUubG9nKHJlc3VsdF8xKTtcclxuICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgY29uc29sZS5sb2coZXJyKTsgLy8gbG9nIHRoZSBlcnJvciB0byB0aGUgY29uc29sZVxyXG4gICB9XHJcbn1cclxuXHJcblxyXG5cclxuLy8gUE9TVCBodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxL2dyb3VwLTEyL2NhcmRzXHJcbi8vIGFkZENhcmQoe25hbWUsIGxpbmt9KSB7XHJcblxyXG4vLyB9XHJcblxyXG5cclxuLy8gREVMRVRFIGh0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvZ3JvdXAtMTIvY2FyZHMvY2FyZElkXHJcbi8vIHJlbW92ZUNhcmQoY2FyZElEKSB7XHJcblxyXG4vLyB9XHJcblxyXG4vLyAvLyBQVVQgaHR0cHM6Ly9hcm91bmQubm9tb3JlcGFydGllcy5jby92MS9ncm91cC0xMi9jYXJkcy9saWtlcy9jYXJkSWRcclxuXHJcbi8vIC8vIERFTEVURSBodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxL2dyb3VwLTEyL2NhcmRzL2xpa2VzL2NhcmRJZFxyXG4vLyBjaGFuZ2VMaWtlQ2FyZFN0YXR1cyhjYXJkSWQsIGxpa2UpIHt9XHJcblxyXG4vLyAvLyBQQVRDSCBodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxL2dyb3VwLTEyL3VzZXJzL21lXHJcbi8vIHNldFVzZXJJbmZvKCkge31cclxuXHJcbi8vIC8vIFBBVENIIGh0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvZ3JvdXAtMTIvdXNlcnMvbWUvYXZhdGFyXHJcbi8vIHNldFVzZXJBdmF0YXJnaXQoKSB7fVxyXG5cclxuXHJcblxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgQXBpO1xyXG4iLCJjbGFzcyBDYXJkIHsgXHJcbiAgY29uc3RydWN0b3IoZGF0YSwgY2FyZFNlbGVjdG9yLCBoYW5kbGVDYXJkQ2xpY2spIHsgXHJcbiAgICB0aGlzLmhhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGljazsgXHJcbiAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lOyBcclxuICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7IFxyXG4gICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yOyBcclxuICB9IFxyXG4gXHJcbiAgX2hhbmRsZUxpa2VCdXR0b24gPSAoZXZ0KSA9PiB7IFxyXG4gICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QudG9nZ2xlKFwiY2FyZF9fcGxhY2UtZmF2b3JpdGVfYWN0aXZlXCIpOyBcclxuICB9OyBcclxuXHJcbiAgX2hhbmRsZURlbGV0ZUJ1dHRvbiA9ICgpID0+IHsgXHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5yZW1vdmUoKTsgXHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudCA9IG51bGw7IFxyXG4gIH07IFxyXG4vL3J1bnMgM3JkIFxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHsgXHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudCBcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fcGxhY2UtZmF2b3JpdGVcIikgXHJcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5faGFuZGxlTGlrZUJ1dHRvbik7IFxyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190cmFzaFwiKVxyXG4gICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7IFxyXG4gICAgICB0aGlzLl9oYW5kbGVEZWxldGVCdXR0b24odGhpcy5fY2FyZEVsZW1lbnQpOyBcclxuICAgIH0pOyBcclxuXHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudCBcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIikgXHJcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4geyBcclxuICAgICAgICB0aGlzLmhhbmRsZUNhcmRDbGljayh7IGxpbms6dGhpcy5fbGluaywgbmFtZTp0aGlzLl9uYW1lfSk7IFxyXG4gICAgICB9KTsgXHJcbiAgfSBcclxuLy9ydW5zIDJuZCBcclxuICBfZ2V0VGVtcGxhdGUoKSB7IFxyXG4gICAgcmV0dXJuIGRvY3VtZW50IFxyXG4gICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkU2VsZWN0b3IpIFxyXG4gICAgICAuY29udGVudC5maXJzdEVsZW1lbnRDaGlsZC5jbG9uZU5vZGUodHJ1ZSk7IFxyXG4gIH0gXHJcblxyXG4vL3J1bnMgMXN0IFxyXG5cclxuXHJcblxyXG5nZXRWaWV3KCkgeyBcclxuICB0aGlzLl9jYXJkRWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7IFxyXG4gIHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fcGxhY2UtbmFtZVwiKS50ZXh0Q29udGVudCA9IFxyXG4gICAgdGhpcy5fbmFtZTsgXHJcbiAgY29uc3QgcGhvdG9FbGVtZW50ID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTsgXHJcbiAgcGhvdG9FbGVtZW50LnNyYyA9IHRoaXMuX2xpbms7IFxyXG4gIHBob3RvRWxlbWVudC5hbHQgPSB0aGlzLl9uYW1lOyBcclxuICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpOyBcclxuICByZXR1cm4gdGhpcy5fY2FyZEVsZW1lbnQ7IFxyXG59XHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgQ2FyZDsgXHJcblxyXG4gIiwiY2xhc3MgU2VjdGlvbiB7XHJcbiBcclxuXHJcbiAgY29uc3RydWN0b3IoeyBpdGVtcywgcmVuZGVyZXIgfSwgY29udGFpbmVyKSB7IFxyXG4gICAgdGhpcy5fcmVuZGVyZWRJdGVtcyA9IGl0ZW1zOyBcclxuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7IFxyXG4gICAgdGhpcy5fY29udGFpbmVyID0gY29udGFpbmVyOyBcclxuICB9IFxyXG5cclxuICBhZGRJdGVtKGVsZW1lbnQpIHsgXHJcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTsgXHJcbiAgfSBcclxuXHJcbiAgcmVuZGVySXRlbXMoaXRlbXMpIHtcclxuICAgIGl0ZW1zLmZvckVhY2godGhpcy5fcmVuZGVyZXIpO1xyXG4gIH1cclxufSBcclxuXHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgU2VjdGlvbjtcclxuICIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiOyBcclxuXHJcbmNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAgeyBcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7IFxyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7IFxyXG4gICAgdGhpcy5fY2FyZEltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW1hZ2UtcHJldmlld1wiKTsgXHJcbiAgfSBcclxuXHJcbiAgb3BlbihuYW1lLCBsaW5rKSB7IFxyXG4gICAgY29uc3QgaW1hZ2VFbGVtZW50ID0gdGhpcy5fY2FyZEltYWdlOyBcclxuICAgIGltYWdlRWxlbWVudC5zcmMgPSBsaW5rOyBcclxuICAgIGltYWdlRWxlbWVudC5hbHQgPSBuYW1lOyBcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIFxyXG4gICAgICBcIi5wb3B1cF9fcHJldmlldy1uYW1lXCIgXHJcbiAgICApLnRleHRDb250ZW50ID0gbmFtZTsgXHJcbiAgICBzdXBlci5vcGVuKCk7IFxyXG4gIH0gXHJcbn0gXHJcblxyXG4gXHJcblxyXG5leHBvcnQgZGVmYXVsdCBQb3B1cFdpdGhJbWFnZTsgIl0sIm5hbWVzIjpbImNvbnN0cnVjdG9yIiwidmFsaWRhdGlvblNldHRpbmdzIiwiZm9ybUVsZW1lbnQiLCJ0aGlzIiwiX2Zvcm0iLCJfZm9ybVNlbGVjdG9yIiwiZm9ybVNlbGVjdG9yIiwiX2lucHV0U2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiX2lucHV0TGlzdCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJfYnV0dG9uRWxlbWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJfc2hvd0lucHV0RXJyb3IiLCJpbnB1dEVsZW1lbnQiLCJlcnJvck1lc3NhZ2UiLCJlcnJvckVsZW1lbnQiLCJpZCIsImNsYXNzTGlzdCIsImFkZCIsInRleHRDb250ZW50IiwiX2hpZGVJbnB1dEVycm9yIiwicmVtb3ZlIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsInZhbGlkaXR5IiwidmFsaWQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsIl9oYXNJbnZhbGlkSW5wdXQiLCJzb21lIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwiZm9yRWFjaCIsImFkZEV2ZW50TGlzdGVuZXIiLCJkaXNhYmxlZCIsImVuYWJsZVZhbGlkYXRpb24iLCJldndudCIsInByZXZlbnREZWZhdWx0IiwicmVzZXRWYWxpZGF0aW9uIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwIiwiZG9jdW1lbnQiLCJfaGFuZGxlRXNjQ2xvc2UiLCJiaW5kIiwiX2Nsb3NlUG9wdXBPblJlbW90ZUNsaWNrIiwib3BlbiIsImNsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImV2dCIsInRhcmdldCIsImNvbnRhaW5zIiwia2V5Iiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJoYW5kbGVGb3JtU3VibWl0Iiwic3VwZXIiLCJfaGFuZGxlRm9ybVN1Ym1pdCIsIl9zYXZlQnV0dG9uIiwiX3NhdmVCdXR0b25UZXh0IiwidmFsdWUiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJfb2JqRGF0YSIsImlucHV0IiwibmFtZSIsInNldElucHV0VmFsdWVzIiwiZGF0YSIsIl9vYmpJbnB1dCIsImNvbnNvbGUiLCJsb2ciLCJyZW5kZXJTYXZpbmciLCJpc1NhdmluZyIsImxvYWRpbmdUZXh0IiwiX2xvYWRpbmdCdXR0b25UZXh0IiwiX3N1Ym1pdEJ1dHRvbiIsIl9zdWJtaXRCdXR0b25UZXh0IiwicmVzZXQiLCJVc2VySW5mbyIsIm5hbWVTZWxlY3RvciIsImNhcmVlclNlbGVjdG9yIiwiX25hbWUiLCJfY2FyZWVyIiwiZ2V0VXNlckluZm8iLCJvY2N1cGF0aW9uIiwic2V0VXNlckluZm8iLCJzZXRVc2VyQXZhdGFyIiwiYXZhdGFyIiwiX3Byb2ZpbGVQaWMiLCJzcmMiLCJlZGl0QWNjb3VudE9wZW5CdG4iLCJwb3B1cEFjY291bnROYW1lIiwicG9wdXBBY2NvdW50VGl0bGUiLCJzdWJtaXRBY2NvdW50RWRpdCIsImFkZFBsYWNlc09wZW5CdG4iLCJzdWJtaXROZXdQbGFjZSIsInBsYWNlTGlzdCIsImFwaSIsImJhc2VVcmwiLCJhdXRoVG9rZW4iLCJhYm91dCIsIl9iYXNlVXJsIiwiX2F1dGhUb2tlbiIsIl9hYm91dCIsInJlcyIsImZldGNoIiwiaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJyZXN1bHRfMSIsImpzb24iLCJlcnIiLCJuZXdVc2VySW5mbyIsInRoZW4iLCJ1c2VyRGF0YSIsImNyZWF0ZUNhcmQiLCJjYXJkRGF0YSIsImNhcmRTZWxlY3RvciIsImhhbmRsZUNhcmRDbGljayIsInRvZ2dsZSIsIl9jYXJkRWxlbWVudCIsIl9saW5rIiwibGluayIsIl9jYXJkU2VsZWN0b3IiLCJfaGFuZGxlTGlrZUJ1dHRvbiIsIl9oYW5kbGVEZWxldGVCdXR0b24iLCJfZ2V0VGVtcGxhdGUiLCJjb250ZW50IiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJjbG9uZU5vZGUiLCJnZXRWaWV3IiwicGhvdG9FbGVtZW50IiwiYWx0IiwiY2hpbGROb2RlcyIsImxlbmd0aCIsImNhcmRMaXN0IiwiY29udGFpbmVyIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9yZW5kZXJlZEl0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsImFkZEl0ZW0iLCJlbGVtZW50IiwicHJlcGVuZCIsInJlbmRlckl0ZW1zIiwiY2FyZEVsZW1lbnQiLCJwcmV2aWV3SW1hZ2VQb3B1cCIsIl9jYXJkSW1hZ2UiLCJpbWFnZUVsZW1lbnQiLCJpdGVtIiwiYWRkTmV3Q2FyZCIsIlBvcHVwV2l0aEZvcm0iLCJwbGFjZXNGb3JtVmFsaWRhdG9yIiwiZWRpdEZvcm1Qb3B1cCIsImFjY291bnRGb3JtVmFsaWRhdG9yIiwiRm9ybVZhbGlkYXRvciJdLCJzb3VyY2VSb290IjoiIn0=